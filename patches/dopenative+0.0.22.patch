diff --git a/node_modules/dopenative/src/localization/i18n.js b/node_modules/dopenative/src/localization/i18n.js
index 26b9fa5..7e5ae66 100644
--- a/node_modules/dopenative/src/localization/i18n.js
+++ b/node_modules/dopenative/src/localization/i18n.js
@@ -7,7 +7,7 @@ import * as Localization from 'expo-localization'
 export const TranslationContext = React.createContext({})
 
 export const TranslationProvider = ({ children, translations }) => {
-  const [locale, setLocale] = useState(Localization.locale)
+  const [locale, setLocale] = useState(Localization.locale.split("-")[0])
 
   console.log('setting up translations')
   console.log(`local locale: ${Localization.locale} `)
@@ -27,20 +27,6 @@ export const TranslationProvider = ({ children, translations }) => {
     [locale],
   )
 
-  const getLocale = useCallback(async () => {
-    const localeJSON = await Storage.getItem('locale')
-    console.log(
-      `getting locale from storage and writing it to memory ${localeJSON}`,
-    )
-
-    // If we have a locale stored in local storage, that is high priority (it overrides the current device locale)
-    setLocale(localeJSON !== null ? localeJSON : Localization.locale)
-  }, [setLocale])
-
-  useEffect(() => {
-    getLocale()
-  }, [getLocale])
-
   useEffect(() => {
     console.log(`write to storage locale: ${locale}`)
     Storage.setItem('locale', locale)
